// In file: ledger/ledger.go
package ledger

import "errors"

// Pre-defined errors
var (
	ErrAccountNotFound    = errors.New("account not found")
	ErrInsufficientFunds  = errors.New("insufficient funds")
	ErrInvalidAmount      = errors.New("amount must be positive")
)

// AccountID represents a unique identifier for an account.
type AccountID string

// Ledger defines the basic operations for a simple in-memory ledger.
// All operations must be safe for concurrent use.
type TransactionalLedger interface {
	Begin() TransactionID
	Commit(txID TransactionID) error
	Rollback(txID TransactionID) error
	Deposit(txID TransactionID, accountID AccountID, amount uint) error
	Withdraw(txID TransactionID, accountID AccountID, amount uint) error
	GetBalance(txID TransactionID, accountID AccountID) (uint, error)
}